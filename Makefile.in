#!/usr/bin/make -f
# Makefile.in based on previous Makefile and autogenerated file 
# by automake 1.4-p6 from Makefile.am

# $Id: Makefile.in,v 1.67 2017/01/05 15:05:48 seiji Exp seiji $
# Makefile for skf. Copyright (c) 1997-2015 by S.Kaneko
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.
# Modified part license is same as other parts of skf. See copyright.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

LC_ALL = C
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
skf_version = @VERSION@

datarootdir = @datarootdir@
bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
includedir = @includedir@
oldincludedir = /usr/include
LSKFDIR = @lskfdir@

DESTDIR =

RUBY_INCLUDE_DIR = @ruby_headers_dir@
PERL_INCLUDE_DIR = @perl_headers_dir@
PYTHON_INCLUDE_DIR = @python_headers_dir@
PHP_INCLUDE_DIR = @php_headers_dir@
TCL_INCLUDE_DIR = @tcl_headers_dir@
LUA_INCLUDE_DIR = @lua_headers_dir@
GNU_S_INCLUDE_DIR = @gnu_s_headers_dir@

#
# Where all stuffs should go.
#
DOCDIR		= $(datadir)/doc/@PACKAGE@
#

LSFMANDIR	= $(datadir)/man
MANDIR		= $(LSFMANDIR)/man1
JOMANDIR	= $(LSFMANDIR)/ja/man1
JMANDIR		= $(LSFMANDIR)/ja_JP.UTF-8/man1
SKFTUTDIR	= $(DOCDIR)/doc
LOCALEDIR	= @localedir@
LOCALEJDIR	= "$(LOCALEDIR)/ja/LC_MESSAGES"
SKFLIBDIR	= $(LSKFDIR)/lib

PERL_DEST_DIR	= @perl_sitearch_dir@
RUBY_DEST_DIR	= @ruby_sitearch_dir@
PYTHON_DEST_DIR	= @python_sitearch_dir@
PHP_DEST_DIR	= @php_sitearch_dir@
LUA_DEST_DIR	= @lua_sitearch_dir@
GNU_S_DEST_DIR	= @gnu_r_sitearch_dir@
TCL_DEST_DIR	= @tcl_sitearch_dir@
DEFAULT_LE	= @lineend_default@

#
# table location
#
# install will see here
TABLEDIRR	= "$(SKFLIBDIR)/$(skf_version)"
# program will see here
TABLEDIR	= \"$(SKFLIBDIR)/$(skf_version)\"

pkgdatadir = "${datadir}/@PACKAGE@"

top_builddir = .
rpm_builddir = "`pwd`/rpm"

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP = @ENABLE_STRIP@
RANLIB = @RANLIB@
RPMBUILD = @RPMBUILD@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@

SUBDIRS = 

#CPPFLAGS = -DLOCALEDIR=\""$(localedir)"\"
CPPFLAGS = 
mkinstalldirs = $(SHELL) $(top_srcdir)/scripts/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 

# Rot13/47 encoding support
# may decrease performance significantly in future releases.
DEF10		= -DROT_SUPPORT

# 64bit file addressing support
# it should have no side effects on POSIX_SOURCE when your system
# lacks support for 64bit.
DEF11		= -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64

# this option is intended for debugging purpose. Do not use
# unless you absolutely know what you are doing.
#DEF12		= -DALTERNATE_TABLE_DIR

#lineend prefer setting
DEF13		= $(DEFAULT_LE)

# for gcc
SKFCFLAGS	=
SKFOPTFLAGS	= -O2 @SKFADDCFLG@

#ifneq (,$(filestring noopt,$(DEB_BUILD_OPTIONS)))
#CFLAGS += -O0
#else 
#CFLAGS += -O1
#endif

DEFS = @DEFS@ -I. -I$(srcdir) -I.

LDFLAGS = @LDFLAGS@
SHARED_FLAGS = @perl_config_shared@
RUBY_SHARED_LINKER = @ruby_config_shared@
PYTHON_SHARED_LINKER = @python_config_shared@
PHP_SHARED_LINKER = @php_config_shared@
TCL_SHARED_LINKER = @tcl_config_shared@
LUA_SHARED_LINKER = @lua_config_shared@
GNU_S_SHARED_LINKER = @gnu_s_config_shared@
EXEEXT_POSTFIX = -DSYSTEM_EXEEXT=\""@ac_exeext@"\"

PYSWIGOPT	= @python_swig_opt@
PYSWIGDEF	= @python_define@
RBSWIGOPT	= @ruby_swig_opt@
RBSWIGDEF	= -DSKF_RUBY@ruby_version@ -DSKF_RUBY@ruby_maj_version@
PYTHON_VERSION	= @python_version@

POS_INDEP_FLAG  = @config_pos_indep@
DEPLOYMENT_TARGET = @deployment_target@

COMPFLAG	= @compflag@

DARWIN_SHARED = @darwin_shared@
LIBS = @LIBS@
LIBICONV = @LIBICONV@

MULTIARCH_ADDED_HEADER = -I/usr/include/@multiarch_header_name@

# strnlen may need this

# includes definitions above.
SKFDEFINES	= $(DEFS) $(STDCOD) $(DEF8) $(DEF10) \
	$(DEF11) -DTABLEDIR="${TABLEDIR}" $(DEF12) $(DEF13) $(EXEEXT_POSTFIX)

skf_LDADD = $(LDADD)
CFLAGS = @CFLAGS@ $(SKFDEFINES) $(SKFCFLAGS) $(SKFOPTFLAGS) $(DARWIN_SHARED)
CSPFLAGS = @CFLAGS@ $(SKFDEFINES) $(SKFCFLAGS)
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(skf_LDADD)
DIST_COMMON =  README.txt ./stamp-h.in copyright CHANGES_ja.txt \
 Makefile.in config.h.in configure configure.ac \
 README_j.txt scripts/install-sh scripts/mkinstalldirs \
 scripts/config.sub scripts/config.guess

PACKAGE = @PACKAGE@

DISTFILES = $(DIST_COMMON) $(SRCS) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = gzip -9f
GZIP_ENV = --best
GZIP_SUFFIX = .gz
DEP_FILES =  .deps/skf.P

#
# commands
#
#MSGFMT		= /usr/bin/msgfmt
MSGFMT		= @msgfmt_skf@
SED		= @SKFSED@
MKDIR           = mkdir
CHMOD		= chmod
SWIG		= swig
MV		= mv

# Use BSD install compatibles
INSTALL_PROGRAM	= install -c
INSTALL_DATA = install -m 644

# in case you have lint.
#LINTPROG      = lint
LINTPROG      = splint 

# Unicode decomposition table generator
UNI_PARSE	= @uniparse_script@

# default output code set - uncomment if you want to change setting
# refer config.h definitions for other code set.
# JIS
#STDCOD		= -DDEFAULT_O=codeset_jis
# EUC
#STDCOD		= -DDEFAULT_O=codeset_euc
# SJIS	
#STDCOD		= -DDEFAULT_O=codeset_sjis
# UTF-8
#STDCOD		= -DDEFAULT_O=codeset_utf8

# default input code set
# JIS
#STDCOD		= -DDEFAULT_I=codeset_jis
# EUC
#STDCOD		= -DDEFAULT_I=codeset_euc
# SJIS	
#STDCOD		= -DDEFAULT_I=codeset_sjis
# UTF-8
#STDCOD		= -DDEFAULT_I=codeset_utf8

#
# srcdir
#
SRCDIR		= .

#
# LIBRARIES
#
RUBY_LIB_DIR = @ruby_lib_dir@
PERL_LIB_DIR = @perl_lib_dir@
PYTHON_LIB_DIR = @python_lib_dir@
PHP_LIB_DIR = @php_lib_dir@
TCL_LIB_DIR = @tcl_lib_dir@
LUA_LIB_DIR = @lua_lib_dir@
GNU_S_LIB_DIR = @gnu_s_lib_dir@

LIBSTDRUBY	= @llibruby@
LIBSTDPERL	= @llibperl@
LIBSTDPHP	= @llibphp@
LIBSTDPYTHON	= @llibpython@
LIBSTDLUA	= @lliblua@
LIBSTDTCL	= @llibtcl@
LIBSTDGNUS	= @llibgnu_s@

PERL_CMD	= @PERL@
PERLLIB		= @perl_extlib@
RUBYLIB		= @ruby_extlib@
PYTHONLIB	= @python_extlib@
PHPLIB		= @php_extlib@
LUALIB		= @lua_extlib@
TCLLIB		= @tcl_extlib@
GNU_S_EXTLIB	= @gnu_s_extlib@

#LINTOPT		= -s -Aa
# for Solaris
#LINTOPT		= -s
# for Splint
#LINTOPT	= +checks -warnposix -predboolint -boolops -ifempty \
#	-nullassign -warnlintcomments -exportlocal +charint\
#	-isoreserved -noparams -readonlytrans +ignorequals -declundef \
#	-exportheader -exportheadervar -onlyunqglobaltrans -redecl \
#	-shiftimplementation -observertrans -abstract -unrecog \
#	-onlytrans -formattype +ignoresigns \
#	-branchstate -statictrans
#LINTOPT	= -warnposix -predboolint -boolops -ifempty +boolint \
#	-nullassign -warnlintcomments -exportlocal +charint\
#	-shiftimplementation -observertrans -abstract -unrecog \
#	-onlytrans -formattype +ignoresigns \
#	-branchstate -statictrans +ignorequals -incondefs -globstate
LINTOPT	= ${MULTIARCH_ADDED_HEADER} \
	-warnposix -predboolint -boolops -ifempty +boolint \
	-nullassign -warnlintcomments -exportlocal +charint\
	-shiftimplementation -observertrans -abstract -unrecog \
	-onlytrans -formattype +ignoresigns \
	-branchstate -statictrans +ignorequals -incondefs -globstate

PREDEF_TABLE	= table

INCLUDES	= skf.h convert.h skf_fileio.h oconv.h config.h

TABLESWITCH   = -DOUTPUT_DYNAMIC_TABLE

OBJS	      = skf.o preconvert.o  oconv.o skf_fileio.o \
		plug_convert.o error.o \
		in_code_table.o in_converter.o \
		eucoconv.o jisoconv.o msoconv.o \
		ucodoconv.o esc_process.o bgoconv.o \
		keisoconv.o out_code_table.o in_decoder.o \
		brgtconv.o  out_encoder.o

EOBJS	      = errortest.o preconvert.o  oconv.o skf_fileio.o \
		plug_convert.o error.o \
		in_code_table.o in_converter.o \
		eucoconv.o jisoconv.o msoconv.o \
		ucodoconv.o esc_process.o bgoconv.o \
		keisoconv.o out_code_table.o in_decoder.o \
		brgtconv.o  out_encoder.o

POBJS         = uni_table_patch.o uni_table_gen.o

ROTOBJS       = skfrot.o esc_process.o \
		skf_fileio.o

DYN_OBJS      = out_code_table.o in_code_table.o \
		dyn_table.o 

DYN_OBJSX     = out_code_table.o in_code_table.o dyn_table.o

DYN_SRCS      = uni_table.c out_code_table.c dyn_table.c in_code_table.c 

PERL_TDEFS    = in_code_table.h

PROGRAM	      = skf 
RUBYEXT	      = @ruby_binary@
PERLEXT	      = @perl_binary@
PERLPM	      = @perl_pm@
PYTHONEXT     = @python_binary@
PYTHONEXTDEF  = @python_script@
PHPEXT	      = @php_binary@
LUAEXT	      = @lua_binary@
TCLEXT	      = @tcl_binary@
GNU_S_EXT     = @gnu_s_binary@
GNU_S_EXTDEF  = @gnu_s_script@
ROT_PROGRAM   = skfrot
LOCALEMSG     = skf.mo
DYN_TABLE_GEN = dyn_table_gen

MANUAL	      = skf.1
JMANUAL	      = skf.1j
JMANUAL_NAME  = skf.1
JMANUAL_ZNAME  = skf.1
JMANUAL_UTF8  = skf.1.utf8
JMANGENOPTION = -Ez
COPYRIGHT     = copyright 
CHANGELOG     = CHANGES_ja.txt
README	     = README.txt

SRCS	      = skf.c preconvert.c oconv.c skf_fileio.c \
		plug_convert.c error.c in_code_table.c \
		in_converter.c  esc_process.c ucodoconv.c \
		out_code_table.c in_decoder.c \
		brgtconv.c out_encoder.c

ESRCS	      = errortest.c preconvert.c oconv.c skf_fileio.c \
		plug_convert.c error.c in_code_table.c \
		in_converter.c  esc_process.c ucodoconv.c \
		out_code_table.c in_decoder.c \
		brgtconv.c out_encoder.c

PSRCS         = uni_table_gen.c uni_table_patch.c

SWIGRSRC       = skf_convert.i
SWIGSRC       = skf_convert_f.i
SWIGINLCUDE   = skf_convert.h
SWIGPSRC       = skf_convert_f_perl.i
SWIGPGSRC      = skf_convert_f_perl_wrap.c
SWIGGSRC      = skf_convert_f_wrap.c
SWIGGOBJ      = skf_convert_f_wrap.o

TABLE_DEF      = uni_table.c 
TABLE_OBJ      = uni_table.o

GENSRCS	      = eucoconv.c jisoconv.c msoconv.c keisoconv.c \
		bgoconv.c 

.PHONY:		clean linttest install locale_install errortest \
		binclean distclean srpm _perlext _rubyext \
		rubyext perlext debchange_install locale_install \
		perlext_install rubyext_install luaext_install \
		gnu_s_ext_install tclext_install all all-programs \
		all-tables rpm srpm

all: all-programs $(LOCALEMSG) config.h

.SUFFIXES:
.SUFFIXES: .S .c .o .s

all-programs:	$(TABLEDEF) $(GENSRCS) dyn_table $(PROGRAM) 

all-tables:	dyn_table unitable

$(OBJS):	skf.h convert.h config.h skf_fileio.h oconv.h \
		in_code_table.h

$(POBJS):	skf.h convert.h config.h oconv.h $(PSRCS)

$(GENSRCS):	genoconv.c oconv.h

uni_table.c:	$(INCLUDES) $(POBJS) unitable
		$(CC) $(CFLAGS) $(POBJS) -o uni_table_gen
		./uni_table_gen

eucoconv.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/EUC/' genoconv.c > eucoconv.c

msoconv.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/SJIS/' genoconv.c > msoconv.c

jisoconv.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/JIS/' genoconv.c > jisoconv.c

keisoconv.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/KEIS/' genoconv.c > keisoconv.c

bgoconv.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/BG/' genoconv.c > bgoconv.c

eucocount.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/EUCc/' genoconv.c > eucocount.c

msocount.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/SJISc/' genoconv.c > msocount.c

jisocount.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/JISc/' genoconv.c > jisocount.c

keisocount.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/KEISc/' genoconv.c > keisocount.c

bgocount.c:	convert.h skf.h config.h genoconv.c
		$(SED)	's/@gen@/BGc/' genoconv.c > bgocount.c

unicode_compose.c: unitable

in_code_table.h: in_code_table.c
		grep "@ISOBYTEDEFINDEX@" in_code_table.c > in_code_table.h

in_table_defs.h: dyn_table unitable

$(PROGRAM):     $(OBJS) $(INCLUDES) config.h
		$(LINK) $(LDFLAGS) $(OBJS) $(LIBS) -o $(PROGRAM)

errortest:     $(EOBJS) $(INCLUDES) dyn_table
		$(LINK) $(LDFLAGS) $(EOBJS) $(LIBS) -o errortest

$(ROT_PROGRAM):     $(ROTOBJS) $(INCLUDES)
		$(LINK) $(LDFLAGS) $(ROTOBJS) $(LIBS) -o $(ROT_PROGRAM)

$(LOCALEMSG):	po/ja.po
		$(MSGFMT) -o $(LOCALEMSG) po/ja.po
		touch $(LOCALEMSG)

dyn_table:	$(INCLUDES) $(DYN_SRCS) in_code_table.h $(TABLE_DEF) 
		$(CC) $(CFLAGS) $(TABLESWITCH) -c in_code_table.c \
			-o in_code_table.o
		$(CC) $(CFLAGS) $(TABLESWITCH) -c out_code_table.c \
			-o out_code_table.o
		$(CC) $(CFLAGS) $(TABLESWITCH) -c dyn_table.c \
			-o dyn_table.o
		$(CC) $(CFLAGS) -DOUTPUT_DYNAMIC_TABLE $(DYN_OBJS) \
			uni_table_patch.o -o $(DYN_TABLE_GEN)
		./dyn_table_gen
		rm $(DYN_OBJSX)
		touch dyn_table

unitable:	
		${PERL_CMD} $(UNI_PARSE) $(COMPFLAG) UnicodeData.txt
		touch unitable

# this routine actually generate out_table_defs for swig
swigdef:	$(INCLUDES) $(DYN_SRCS) in_code_table.h $(TABLE_DEF)
		$(CC) $(CFLAGS) $(TABLESWITCH) -DSWIG_EXT -c in_code_table.c \
			-o in_code_table.o
		$(CC) $(CFLAGS) $(TABLESWITCH) -DSWIG_EXT -c out_code_table.c \
			-o out_code_table.o
		$(CC) $(CFLAGS) $(TABLESWITCH) -DSWIG_EXT -c dyn_table.c \
			-o dyn_table.o
		$(CC) $(CFLAGS) -DOUTPUT_DYNAMIC_TABLE -DSWIG_EXT $(DYN_OBJS) \
			uni_table_patch.o -o $(DYN_TABLE_GEN)
		./dyn_table_gen
		rm $(DYN_OBJSX)
		touch swigdef dyn_table

rubyext:	$(SWIGRSRC)
# We need this environment variable for MacOS X
		$(MAKE) -e _rubyext "SKFCFLAGS=$(POS_INDEP_FLAG) -DSWIG_EXT $(RBSWIGDEF) "\
		$(DEPLOYMENT_TARGET)

perlext:	$(SWIGRSRC)
# We need this environment variable for MacOS X
		$(MAKE) -e _perlext \
		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT " \
		$(DEPLOYMENT_TARGET)

phpext:		$(SWIGRSRC)
		$(MAKE) -e _phpext \
		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT " \
		$(DEPLOYMENT_TARGET)

pythonext:	$(SWIGRSRC)
		$(MAKE) -e _pythonext \
		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT $(PYSWIGDEF)" \
		$(DEPLOYMENT_TARGET)

#luaext:		$(SWIGRSRC)
#		$(MAKE) -e _luaext \
#		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT " \
#		$(DEPLOYMENT_TARGET)

tclext:		$(SWIGRSRC)
		$(MAKE) -e _tclext \
		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT " \
		$(DEPLOYMENT_TARGET)

gnu_r_ext:	$(SWIGRSRC)
		$(MAKE) -e _gnu_sext \
		"SKFCFLAGS=$(POS_INDEP_FLAG) -D_GNU_SOURCE -D_REENTRANT -DSWIG_EXT " \
		$(DEPLOYMENT_TARGET)

_perlswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/char/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/char/g' |\
		    sed 's/@SKFCSTRINGS@/char/g' > $(SWIGSRC)
#		sed 's/^\%module skf/\%module Skf/' $(SWIGSRC) > $(SWIGPSRC)
		$(SWIG) -perl $(SWIGSRC)
		touch _perlswigglue

_rubyswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/SKFSTRINGS/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/SKFSTRINGS/g' |\
		    sed 's/@SKFCSTRINGS@/SKFSTRINGS/g' > $(SWIGSRC)
		$(SWIG) -ruby $(SWIGSRC)
		touch _rubyswigglue

_phpswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/char/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/char/g' |\
		    sed 's/@SKFCSTRINGS@/char/g' > $(SWIGSRC)
		$(SWIG) -php $(SWIGSRC)
		touch _phpswigglue

_pythonswigglue: $(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/@python_srcstr_typ@/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/@python_tgtstr_typ@/g' |\
		    sed 's/@SKFCSTRINGS@/@python_optstr_typ@/g' > $(SWIGSRC)
		$(SWIG) -python $(PYSWIGOPT) $(SWIGSRC)
		touch _pythonswigglue

_luaswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/char/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/char/g' |\
		    sed 's/@SKFCSTRINGS@/char/g' > $(SWIGSRC)
		$(SWIG) -lua $(SWIGSRC)
		touch _luaswigglue

_tclswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/char/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/char/g' |\
		    sed 's/@SKFCSTRINGS@/char/g' > $(SWIGSRC)
		$(SWIG) -tcl $(SWIGSRC)
		touch _tclswigglue

_gnurswigglue:	$(SWIGRSRC) $(SWIGINCLUDE)
		sed 's/@SKFSTRINGS@/char/g' $(SWIGRSRC) |\
		    sed 's/@SKFOSTRINGS@/char/g' |\
		    sed 's/@SKFCSTRINGS@/char/g' > $(SWIGSRC)
		$(SWIG) -r $(SWIGSRC)
		touch _gnurswigglue

_perlext:	swigdef _perlswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS)
		$(CC) -I$(PERL_INCLUDE_DIR) $(CFLAGS) -c $(SWIGGSRC) -o $(SWIGGOBJ)
		$(LINK) $(SHARED_FLAGS) $(LDFLAGS) -L$(PERL_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDPERL) $(SWIGGOBJ) \
			-o $(PERLEXT) $(PERLLIB)
		touch _perlext

_rubyext:	swigdef _rubyswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) $(RUBY_INCLUDE_DIR) $(CFLAGS) $(RBSWIGDEF) \
			-c $(SWIGGSRC) -o $(SWIGGOBJ)
		$(RUBY_SHARED_LINKER) $(LDFLAGS) -L$(RUBY_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDRUBY) $(SWIGGOBJ) \
			-o $(RUBYEXT) $(RUBYLIB)
		touch _rubyext

_phpext:	swigdef _phpswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) $(PHP_INCLUDE_DIR) $(CFLAGS) -c $(SWIGGSRC) \
			-o $(SWIGGOBJ)
		$(PHP_SHARED_LINKER) $(LDFLAGS) -L$(PHP_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDPHP) $(SWIGGOBJ) \
			-o $(PHPEXT)
		touch _phpext

_pythonext:	swigdef _pythonswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) -I$(PYTHON_INCLUDE_DIR) $(CFLAGS) $(PYSWIGDEF) -c $(SWIGGSRC) \
			-o $(SWIGGOBJ)
		$(PYTHON_SHARED_LINKER) $(LDFLAGS) -L$(PYTHON_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDPYTHON) $(SWIGGOBJ) $(PYSWIGDEF) \
			-o $(PYTHONEXT) $(PYTHONLIB)
		touch _pythonext

_luaext:	swigdef _luaswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) $(LUA_INCLUDE_DIR) $(CFLAGS) -c $(SWIGGSRC) \
			-o $(SWIGGOBJ)
		$(LUA_SHARED_LINKER) $(LDFLAGS) -L$(LUA_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDLUA) $(SWIGGOBJ) \
			-o $(LUAEXT) $(LUALIB)
		touch _luaext

_tclext: 	swigdef _tclswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) -I$(TCL_INCLUDE_DIR) $(CFLAGS) -c $(SWIGGSRC) \
			-o $(SWIGGOBJ)
		$(TCL_SHARED_LINKER) $(LDFLAGS) -L$(TCL_LIB_DIR) \
			$(OBJS) $(LIBS) $(LIBSTDTCL) $(SWIGGOBJ) \
			-o $(TCLEXT) $(TCLLIB)
		touch _tclext

_gnu_sext: 	swigdef _gnurswigglue $(INCLUDES) $(DYN_SRCS) $(GENSRCS) config.h $(OBJS) 
		$(CC) -I$(GNU_S_INCLUDE_DIR) $(CFLAGS) -c $(SWIGGSRC) \
			-o $(SWIGGOBJ)
		$(GNU_S_SHARED_LINKER) $(LDFLAGS) -L$(GNU_S_LIB_DIR)\
			$(OBJS) $(LIBS) $(LIBSTDGNUS) $(SWIGGOBJ) \
			-o $(GNU_S_EXT) $(GNU_S_LIB)
		touch _gnu_sext

linttest:       $(INCLUDES) $(GENSRCS) config.h uni_table.c in_code_table.h all-programs
		$(LINTPROG) $(LINTOPT) $(DEFINES) $(CSPFLAGS) $(SRCS) \
			$(GENSRCS)
		$(LINTPROG) $(LINTOPT) $(DEFINES) $(CSPFLAGS) uni_table.c

clean:;		rm -f $(OBJS) $(PROGRAM) *~ a.out *.orig *.rej \
	uni_table.c uni_table_gen core logger $(GENSRCS) build skf.mo \
	dyn_table dyn_table_gen in_code_table.h errortest errortest.o \
	gmon.out bb.out *.da $(POBJS) out_table_defs.h skf.rb \
	in_table_defs.h uni_table.o skf.1j.gz skf.1.gz dyn_table.o
	-rm -f $(SWIGGSRC) $(SWIGGOBJ) swigdef $(SWIGPSRC) $(SWIGPGSRC)
		-rm -f $(PERLEXT) $(RUBYEXT) $(LUAEXT) $(PYTHONEXT) \
			$(TCLEXT) $(PHPEXT) $(GNU_S_EXT)
		- rm -f $(PYTHONEXT) $(PHPEXT)
		rm -f table/*.stb
		rm -f debian/files
		rm -f *.exe *.log
		rm -f stamp-srpm
		rm -f $(JMANUAL_UTF8)
		rm -rf $(rpm_builddir)/SOURCES $(rpm_builddir)/RPMS \
			$(rpm_builddir)/BUILD $(rpm_builddir)/SRPMS \
			$(rpm_builddir)/BUILDROOT $(rpm_builddir)/home
		- $(CHMOD) 644 CHANGES_ja.txt skf.1 skf.1j
		- rm -f _perlswigglue _rubyswigglue $(PERLPM)
	-rm -f unitable
	-rm -f unicode_compose.c
	-rm -f *.gcda *.gcov *.gcno
	-rm -f skf.php php_skf.h skf.py skf.pyc skf.R
	-rm -f stamp-h1 messages.mo
	-rm -f _perlext _rubyext _phpext _tclext _pythonext _luaext \
		_gnu_sext _pythonswigglue _luaswigglue _tclswigglue \
		_gnurswigglue _phpswigglue
	-rm -f $(SWIGSRC)
	-rm -f Skf.so
	-rm -rf __pycache__

binclean:;	rm -f $(OBJS) $(PROGRAM) *~ a.out *.orig *.rej \
	uni_table_gen core logger build skf.mo skf.rb dyn_table.o \
	dyn_table dyn_table_gen  uni_table_gen.o 
	-rm -f $(SWIGGSRC) $(SWIGGOBJ) swigdef $(SWIGPSRC) $(SWIGPGSRC)
		-rm -f table/*.stb
		rm -f debian/files
		-rm -f $(PERLEXT) $(RUBYEXT) $(LUAEXT) $(PYTHONEXT) \
			$(TCLEXT) $(PHPEXT) $(GNU_S_EXT)
		- $(CHMOD) 644 CHANGES_ja.txt skf.1 skf.1j
		- rm -f _perlswigglue _rubyswigglue $(PERLPM)
		-rm -f *.gcda *.gcov *.gcno
	-rm -f skf.php php_skf.h skf.py skf.pyc skf.R
	-rm -f stamp-h1 messages.mo
	-rm -f _perlext _rubyext _phpext _tclext _pythonext _luaext \
		_gnu_sext _pythonswigglue _luaswigglue _tclswigglue \
		_gnurswigglue _phpswigglue
	-rm -f $(SWIGSRC)
	-rm -f Skf.so
	-rm -rf __pycache__

distclean:	clean
		-rm -f config.status
	-rm -f dyn_table.o
	-rm -f config.cache stamp-h stamp-h[0-9]* config.status config.log
	-rm -rf configure.scan config.h autom4te.cache
	-rm -rf ./.deps
	-rm -rf ./autom4te.cache
	-rm -f $(PERLEXT) $(RUBYEXT) $(LUAEXT) $(PYTHONEXT) \
		$(TCLEXT) $(PHPEXT) $(GNU_S_EXT)
	- $(CHMOD) 644 CHANGES_ja.txt skf.1 skf.1j
	- rm -rf $(rpm_builddir)/SOURCES $(rpm_builddir)/RPMS \
			$(rpm_builddir)/BUILD $(rpm_builddir)/SRPMS \
			$(rpm_builddir)/home $(rpm_builddir)/BUILDROOT
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	- rm -f _perlswigglue _rubyswigglue $(PERLPM)
	-rm -f $(SWIGGSRC) $(SWIGGOBJ) swigdef $(SWIGPSRC) $(SWIGPGSRC)
	-rm -f stamp-h1 messages.mo
	-rm -f *.gcda *.gcov *.gcno
	-rm -f skf.php php_skf.h skf.py skf.pyc skf.R
	-rm -f _perlext _rubyext _phpext _tclext _pythonext _luaext \
		_gnu_sext _pythonswigglue _luaswigglue _tclswigglue \
		_gnurswigglue _phpswigglue
	-rm -f $(SWIGSRC)
	-rm -f Skf.so
	-rm -rf __pycache__

install:	all-programs all-tables
		$(mkinstalldirs) $(DESTDIR)$(bindir)
		$(mkinstalldirs) $(DESTDIR)$(MANDIR)
		$(mkinstalldirs) $(DESTDIR)$(JOMANDIR)
		$(mkinstalldirs) $(DESTDIR)$(JMANDIR)
		$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
		$(mkinstalldirs) $(DESTDIR)$(TABLEDIRR)
		$(mkinstalldirs) $(DESTDIR)$(DOCDIR)
		$(mkinstalldirs) $(DESTDIR)$(SKFTUTDIR)
		$(INSTALL_PROGRAM) $(INSTALL_STRIP) -m 0755 $(PROGRAM) $(DESTDIR)$(bindir)
		- $(INSTALL_DATA) $(MANUAL) $(DESTDIR)$(MANDIR)
		- $(GZIP) $(DESTDIR)$(MANDIR)/$(MANUAL)
		$(INSTALL_DATA) $(COPYRIGHT) $(DESTDIR)$(DOCDIR)
		$(INSTALL_DATA) $(CHANGELOG) $(DESTDIR)$(DOCDIR)
		$(INSTALL_DATA) doc/*.txt $(DESTDIR)$(SKFTUTDIR)
		- $(GZIP) -r $(DESTDIR)$(SKFTUTDIR)/*.txt
		$(INSTALL_DATA) $(README) $(DESTDIR)$(DOCDIR)
		$(INSTALL_DATA) $(PREDEF_TABLE)/* $(DESTDIR)$(TABLEDIRR)

locale_install: $(LOCALEMSG) $(PROGRAM)
		./$(PROGRAM) $(JMANGENOPTION) $(JMANUAL) > $(JMANUAL_UTF8)
		- $(mkinstalldirs) $(DESTDIR)$(LOCALEJDIR)
		- $(mkinstalldirs) $(DESTDIR)$(LOCALEDIR)
		$(INSTALL_DATA) $(LOCALEMSG) $(DESTDIR)$(LOCALEJDIR) 
		- $(INSTALL_DATA) $(JMANUAL_UTF8) $(DESTDIR)$(JMANDIR)/$(JMANUAL_NAME)
		- $(GZIP) $(DESTDIR)$(JMANDIR)/$(JMANUAL_NAME)
		- $(INSTALL_DATA) $(JMANUAL) $(DESTDIR)$(JOMANDIR)/$(JMANUAL_NAME)
		- $(GZIP) $(DESTDIR)$(JOMANDIR)/$(JMANUAL_NAME)

debchange_install:
		- $(mkinstalldirs) $(DESTDIR)$(DOCDIR)
		$(INSTALL_DATA) debian/changelog $(DESTDIR)$(DOCDIR)

rpmchange_install:
		- $(mkinstalldirs) $(DESTDIR)$(DOCDIR)
		$(INSTALL_DATA) changelog $(DESTDIR)$(DOCDIR)

perlext_install: $(PERLEXT)
		- $(mkinstalldirs) $(DESTDIR)$(PERL_DEST_DIR)
		$(INSTALL_DATA) $(PERLPM) $(DESTDIR)$(PERL_DEST_DIR)
		$(INSTALL_PROGRAM) $(PERLEXT) $(DESTDIR)$(PERL_DEST_DIR)

rubyext_install: $(RUBYEXT)
		- $(mkinstalldirs) $(DESTDIR)$(RUBY_DEST_DIR)
		$(INSTALL_PROGRAM) $(RUBYEXT) $(DESTDIR)$(RUBY_DEST_DIR)

pythonext_install: $(PYTHONEXT)
		- $(mkinstalldirs) $(DESTDIR)$(PYTHON_DEST_DIR)
		$(INSTALL_PROGRAM) $(PYTHONEXT) $(DESTDIR)$(PYTHON_DEST_DIR)
		$(INSTALL_PROGRAM) $(PYTHONEXTDEF) $(DESTDIR)$(PYTHON_DEST_DIR)

phpext_install: $(PHPEXT)
		- $(mkinstalldirs) $(DESTDIR)$(PHP_DEST_DIR)
		$(INSTALL_PROGRAM) $(PHPEXT) $(DESTDIR)$(PHP_DEST_DIR)

luaext_install: $(LUAEXT)
		- $(mkinstalldirs) $(DESTDIR)$(LUA_DEST_DIR)
		$(INSTALL_PROGRAM) $(LUAEXT) $(DESTDIR)$(LUA_DEST_DIR)

gnu_r_ext_install: $(GNU_S_EXT)
		- $(mkinstalldirs) $(DESTDIR)$(GNU_S_DEST_DIR)
		$(INSTALL_PROGRAM) $(GNU_S_EXT) $(DESTDIR)$(GNU_S_DEST_DIR)
		$(INSTALL_PROGRAM) $(GNU_S_EXTDEF) $(DESTDIR)$(GNU_S_DEST_DIR)

uninstall:
		-rm $(DESTDIR)$(bindir)/$(PROGRAM)
		-rm -rf $(DESTDIR)$(DOCDIR)
		-rm -f $(DESTDIR)$(JOMANDIR)/$(JMANUAL_NAME)$(GZIP_SUFFIX)
		-rm -f $(DESTDIR)$(JMANDIR)/$(JMANUAL_NAME)$(GZIP_SUFFIX)
		-rm -rf $(DESTDIR)$(TABLEDIRR)
		-rm -rf $(DESTDIR)$(SKFTUTDIR)

srpm:		stamp-srpm

stamp-srpm:	stamp-h
		- $(MKDIR)	$(rpm_builddir)/SOURCES
		- $(MKDIR)	$(rpm_builddir)/SOURCES/skf-$(skf_version)
		- $(MKDIR)	$(rpm_builddir)/SRPMS
		- $(MKDIR)	$(rpm_builddir)/BUILD
		- $(MKDIR)	$(rpm_builddir)/RPMS
		- $(MKDIR)	$(rpm_builddir)/RPMS/i386
		echo "%_topdir $(rpm_builddir)" > $(HOME)/.rpmmacros
#		- scripts/genrpmmacro $(rpm_builddir)
		- rm -rf $(rpm_builddir)/SOURCES/skf-$(skf_version).tar.gz
		cp $(INCLUDES) $(SRCS) $(PSRCS) dyn_table.c \
			$(rpm_builddir)/SOURCES/skf-$(skf_version)
		cp configure.ac configure config.h.in Makefile.in \
			README.txt skf.1 skf.1j genoconv.c copyright\
			aclocal.m4 CHANGES_ja.txt UnicodeData.txt\
			$(rpm_builddir)/SOURCES/skf-$(skf_version)
		cp -r table/ po/ scripts/ doc/ \
			$(rpm_builddir)/SOURCES/skf-$(skf_version)
		cp debian/changelog \
	$(rpm_builddir)/SOURCES/skf-$(skf_version)/changelog
		cd $(rpm_builddir)/SOURCES; tar cvfz skf-$(skf_version).tar.gz \
			skf-$(skf_version)
#		$(RPMBUILD) --root $(rpm_builddir) -bs rpm/SPECS/skf.spec 
		$(RPMBUILD) -bs rpm/SPECS/skf.spec 
		touch stamp-srpm

rpm:		stamp-srpm
		$(RPMBUILD) -bb rpm/SPECS/skf.spec
#		$(RPMBUILD) -bb $(rpm_builddir)/SPECS/skf.spec

#
# autogenerated by automake
#
Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(srcdir)/configure: $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

config.h: stamp-h
	@if test ! -f $@; then \
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
	else :; fi
stamp-h: $(srcdir)/config.h.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=config.h \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.h.in: $(srcdir)/stamp-h.in
	@if test ! -f $@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

